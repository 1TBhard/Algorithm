/* 200. Number of Islands */
// Runtime: 80 ms, faster than 83.44%
/**
 * @param {character[][]} grid
 * @return {number}
 */

// 섬에 방문한 곳을 2
var numIslands = function(grid) {
  let answer = 0;

  const canGo = (i, j) => {

    if(i < 0 || i >= grid.length)
      return false;

    if(grid[i][j] === undefined || grid[i][j] === "0")
      return false;
    
    return true;
  }

  const find_map = (i, j) => {

    let q = [[i, j]];

    while(q.length > 0) {
      const [i, j] = q.shift();
      const up = canGo(i-1, j);
      const down = canGo(i+1, j);
      const left = canGo(i, j-1)
      const right = canGo(i, j+1);
      
      if(up) {
        q.push([i-1, j]);
        grid[i-1][j] = '0'
      }
      if(down) {
        q.push([i+1, j]);
        grid[i+1][j] = '0'
      }
      if(right) {
        q.push([i, j+1]);
        grid[i][j+1] = '0'
      }
      if(left) {
        q.push([i, j-1]);
        grid[i][j-1] = '0'
      }
    }
    answer++;
  }

  for(var i=0 ; i < grid.length ; i++) {
    for(var j=0 ; j < grid[0].length ; j++) {
      if(grid[i][j] === '1') {
        find_map(i, j);
      }
    }
  }

  return answer;
};

numIslands(
  [
    ["1","1","1","1","1","0","1","1","1","1","1","1","1","1","1","0","1","0","1","1"],
    ["0","1","1","1","1","1","1","1","1","1","1","1","1","0","1","1","1","1","1","0"],
    ["1","0","1","1","1","0","0","1","1","0","1","1","1","1","1","1","1","1","1","1"],
    ["1","1","1","1","0","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1"],
    ["1","0","0","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1"],
    ["1","0","1","1","1","1","1","1","0","1","1","1","0","1","1","1","0","1","1","1"],
    ["0","1","1","1","1","1","1","1","1","1","1","1","0","1","1","0","1","1","1","1"],
    ["1","1","1","1","1","1","1","1","1","1","1","1","0","1","1","1","1","0","1","1"],
    ["1","1","1","1","1","1","1","1","1","1","0","1","1","1","1","1","1","1","1","1"],
    ["1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1"],
    ["0","1","1","1","1","1","1","1","0","1","1","1","1","1","1","1","1","1","1","1"],
    ["1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1"],
    ["1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1"],
    ["1","1","1","1","1","0","1","1","1","1","1","1","1","0","1","1","1","1","1","1"],
    ["1","0","1","1","1","1","1","0","1","1","1","0","1","1","1","1","0","1","1","1"],
    ["1","1","1","1","1","1","1","1","1","1","1","1","0","1","1","1","1","1","1","0"],
    ["1","1","1","1","1","1","1","1","1","1","1","1","1","0","1","1","1","1","0","0"],
    ["1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1"],
    ["1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1"],
    ["1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1"]
  ]);